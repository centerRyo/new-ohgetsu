name: Deploy server

on:
  push:
    branches:
      - main
    paths:
      - 'server/**'
      - '.github/workflows/deploy-server.yml'

jobs:
  build_and_push:
    runs-on: ubuntu-latest

    env:
      SERVER_IMAGE_NAME: ohgetsu-server
      REGISTRY: ohgetsu.sakuracr.jp

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # tagを取得
      - name: Set tag to environment variables
        id: set-tag
        run: echo ::set-output name=version::${GITHUB_REF#refs/*/}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Sakra Cloud Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.SAKURA_CLOUD_USERNAME }}
          password: ${{ secrets.SAKURA_CLOUD_PASSWORD }}

      - name: Build and push server
        uses: docker/build-push-action@v2
        with:
          context: ./server
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.SERVER_IMAGE_NAME }}:latest
            ${{ env.REGISTRY }}/${{ env.SERVER_IMAGE_NAME }}:${{ steps.set-tag.outputs.version }}

      - name: Execute remote commands via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SAKURA_CLOUD_SSH_HOST }}
          username: ${{ secrets.SAKURA_CLOUD_SSH_USERNAME }}
          key: ${{ secrets.SAKURA_CLOUD_SSH_KEY }}
          script: |
            # Pull the latest images
            docker pull ${{ env.REGISTRY }}/${{ env.SERVER_IMAGE_NAME }};latest

            # Create Docker network if not exists
            docker network inspect ohgetsu_network > /dev/null 2>&1 || docker network create ohgetsu_network

            # Run server container
            docker rm -f ohgetsu-server || true
            docker run -d --name ohgetsu-server --network ohgetsu_network \
              -e DATABASE_URL="postgres://postgres:postgres@ohgetsu-db:5432/ohgetsu" \
              -p 8080:8080 ${{ env.REGISTRY }}/${{ env.SERVER_IMAGE_NAME }}:latest
